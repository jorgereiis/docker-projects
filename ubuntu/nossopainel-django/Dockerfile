FROM ubuntu:20.04

ENV PORT=8001

# Define o frontend como n√£o interativo e configura o timezone
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Recife

# Instala as depend√™ncias
RUN apt-get update && apt-get install -y \
    python3-pip python3-dev libpq-dev wget git tzdata supervisor && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /home/django

# Clona o reposit√≥rio do projeto
RUN git clone https://github.com/jorgereiis/nossopainelgestao.git /home/django/app

# Copiar arquivos essenciais para o projeto
#COPY ./.env /home/django/app
#COPY ./database/db.sqlite3 /home/django/app

RUN mkdir /home/django/app/logs
RUN touch /home/django/app/logs/error.log
RUN mkdir -p /home/django/app/logs/Scheduler
RUN mkdir -p /etc/supervisor/conf.d
RUN mkdir -p /var/log/supervisor

# Define o diret√≥rio de trabalho e instala os requisitos
WORKDIR /home/django/app
RUN pip3 install --default-timeout=120 --no-cache-dir -r requirements.txt

# Exp√µe a porta para o servidor
EXPOSE 8001

# Faz as migra√ß√µes e roda o servidor
#CMD ["sh", "-c", "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8001 setup.wsgi:application"]
#CMD ["sh", "-c", "python3 manage.py makemigrations --merge && python3 manage.py migrate && python3 manage.py collectstatic --noinput && python3 manage.py runserver 0.0.0.0:8001"]

# Configura√ß√£o do supervisord (arquivo mais leg√≠vel)
COPY <<EOF /etc/supervisor/conf.d/django.conf
[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
loglevel=info

[program:gunicorn]
command=gunicorn setup.wsgi:application --bind 0.0.0.0:8001 --workers 3 --threads 2 --worker-class sync --timeout 120 --max-requests 1000 --max-requests-jitter 50 --access-logfile - --error-logfile - --log-level info --name nossopainel-django
directory=/home/django/app
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
priority=1
startsecs=10
stopwaitsecs=30

[program:agendamentos]
command=python3 scripts/agendamentos.py
directory=/home/django/app
autostart=true
autorestart=true
stdout_logfile=/home/django/app/logs/Scheduler/agendamentos_stdout.log
stderr_logfile=/home/django/app/logs/Scheduler/agendamentos_stderr.log
stdout_logfile_maxbytes=10MB
stderr_logfile_maxbytes=10MB
stdout_logfile_backups=3
stderr_logfile_backups=3
priority=2
startsecs=10
stopwaitsecs=60
killasgroup=true
stopasgroup=true
numprocs=1
process_name=%(program_name)s
EOF

# Script de inicializa√ß√£o
COPY <<'EOF' /home/django/app/start.sh
#!/bin/bash
set -e

echo "üöÄ Iniciando aplica√ß√£o Django em PRODU√á√ÉO..."
echo "================================================"

# Verificar vari√°veis cr√≠ticas
if [ "$DEBUG" = "True" ]; then
    echo "‚ö†Ô∏è  WARNING: DEBUG=True detectado em produ√ß√£o!"
    echo "   Configure DEBUG=False no .env"
fi

# Criar migrations
echo "üì¶ Criando migrations..."
python3 manage.py makemigrations --merge 2>/dev/null || echo "‚ö†Ô∏è  Sem migrations para merge"

echo "üì¶ Aplicando migrations do banco de dados..."
python3 manage.py migrate --noinput || {
    echo "‚ùå Erro ao aplicar migrations!"
    exit 1
}

# Coletar arquivos est√°ticos
echo "üìÅ Coletando arquivos est√°ticos..."
python3 manage.py collectstatic --noinput --clear || {
    echo "‚ùå Erro ao coletar arquivos est√°ticos!"
    exit 1
}

echo ""
echo "‚úÖ Inicializando servi√ßos com Supervisor..."
echo "   üì° Gunicorn:"
echo "      ‚Ä¢ Workers: 3"
echo "      ‚Ä¢ Threads por worker: 2"
echo "      ‚Ä¢ Bind: 0.0.0.0:8001"
echo "      ‚Ä¢ Timeout: 120s"
echo "   ‚è∞ Agendamentos (scripts/agendamentos.py):"
echo "      ‚Ä¢ 08:00 - GP Futebol"
echo "      ‚Ä¢ 10:00 - GP Vendas (manh√£)"
echo "      ‚Ä¢ 12:00 - Scheduled Tasks"
echo "      ‚Ä¢ 17:00 - Mensalidades Canceladas"
echo "      ‚Ä¢ 20:00 - GP Vendas (noite)"
echo "      ‚Ä¢ 23:00 - Telegram Connection"
echo "      ‚Ä¢ 23:50 - Upload Telegram"
echo "      ‚Ä¢ A cada 60min - Backup DB"
echo "      ‚Ä¢ A cada 1min - Envios Agendados"
echo "   üìã Logs:"
echo "      ‚Ä¢ Gunicorn: stdout/stderr"
echo "      ‚Ä¢ Agendamentos: logs/Scheduler/"
echo "      ‚Ä¢ Supervisor: /var/log/supervisor/"
echo "================================================"
echo ""

# Iniciar Supervisor
exec /usr/bin/supervisord -c /etc/supervisor/supervisord.conf
EOF

RUN chmod +x /home/django/app/start.sh

CMD ["/home/django/app/start.sh"]